name: Build Agent Packages

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd agents && npm install
    
    - name: Get version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="dev-$(date +%Y%m%d)-${GITHUB_SHA::8}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Update version in agent
      run: |
        sed -i "s/const AGENT_VERSION = '1.0.0'/const AGENT_VERSION = '${{ steps.version.outputs.version }}'/" agents/main.ts
    
    - name: Build TypeScript
      run: |
        cd agents
        npm run build
    
    - name: Package Linux binaries
      run: |
        cd agents
        npm run package:linux
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-packages
        path: |
          dist/agents/soc-agent-linux-*

  build-windows:
    runs-on: windows-latest
    needs: build-linux
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd agents && npm install
    
    - name: Update version in agent
      run: |
        (Get-Content agents/main.ts) -replace "const AGENT_VERSION = '1.0.0'", "const AGENT_VERSION = '${{ needs.build-linux.outputs.version }}'" | Set-Content agents/main.ts
    
    - name: Build TypeScript
      run: |
        cd agents
        npm run build
    
    - name: Package Windows binary
      run: |
        cd agents
        npm run package:windows
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-packages
        path: |
          dist/agents/soc-agent-windows.exe

  build-macos:
    runs-on: macos-latest
    needs: build-linux
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd agents && npm install
    
    - name: Update version in agent
      run: |
        sed -i '' "s/const AGENT_VERSION = '1.0.0'/const AGENT_VERSION = '${{ needs.build-linux.outputs.version }}'/" agents/main.ts
    
    - name: Build TypeScript
      run: |
        cd agents
        npm run build
    
    - name: Package macOS binary
      run: |
        cd agents
        npm run package:macos
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-packages
        path: |
          dist/agents/soc-agent-macos-*

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: linux-packages
        path: dist/agents

    - uses: actions/download-artifact@v4
      with:
        name: windows-packages
        path: dist/agents

    - uses: actions/download-artifact@v4
      with:
        name: macos-packages
        path: dist/agents

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.build-linux.outputs.version }}
        files: |
          dist/agents/soc-agent-linux-*
          dist/agents/soc-agent-windows.exe
          dist/agents/soc-agent-macos-*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

